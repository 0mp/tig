.\"     Title: tigrc
.\"    Author: 
.\" Generator: DocBook XSL Stylesheets v1.72.0 <http://docbook.sf.net/>
.\"      Date: 03/17/2008
.\"    Manual: Tig Manual
.\"    Source: Tig 0.10
.\"
.TH "TIGRC" "5" "03/17/2008" "Tig 0.10" "Tig Manual"
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
tigrc \- tig user configuration file
.SH "SYNOPSIS"
.sp
.RS 4
.nf
\fBset\fR   \fIvariable\fR \fB=\fR \fIvalue\fR
\fBbind\fR  \fIkeymap\fR \fIkey\fR \fIaction\fR
\fBcolor\fR \fIarea\fR \fIfgcolor\fR \fIbgcolor\fR \fI[attributes]\fR
.fi
.RE
.sp
.SH "DESCRIPTION"
You can permanently set an option by putting it in the ~/.tigrc file. The file consists of a series of \fIcommands\fR. Each line of the file may contain only one command.
.sp
The hash mark (\fI#\fR) is used as a \fIcomment\fR character. All text after the comment character to the end of the line is ignored. You can use comments to annotate your initialization file.
.sp
.SH "SET COMMAND"
A few selective variables can be configured via the set command. The syntax is:
.sp
.sp
.RS 4
.nf
\fBset\fR variables \fB=\fR value
.fi
.RE
.sp
Examples:
.sp
.sp
.RS 4
.nf
set show\-rev\-graph = yes        # Show revision graph?
set line\-number\-interval = 5    # Interval between line numbers
set tab\-size = 8                # Number of spaces per tab
set encoding = "UTF\-8"          # Commit encoding
.fi
.RE
.sp
The type of variables are either bool, int, and string.
.sp
.PP
Valid bool values
.RS 4
To set a bool variable to true use either "1", "true", or "yes". Any other value will set the variable to false.
.RE
.PP
Valid int values
.RS 4
A non\-negative integer.
.RE
.PP
Valid string values
.RS 4
A string of characters. Optionally, use either ' or " as delimiters.
.RE
.SS "Variables"
The following variables can be set:
.sp
.PP
\fIshow\-rev\-graph\fR (bool)
.RS 4
Show revision graph in the main view on start\-up. Can be toggled with
\fIg\fR.
.RE
.PP
\fIline\-number\-interval\fR (int)
.RS 4
Interval between line numbers. Note, you have to toggle on line numbering with
\fIn\fR
or the
\-n
command line option. The default is to number every line.
.RE
.PP
\fItab\-size\fR (int)
.RS 4
Number of spaces per tab. The default is 8 spaces.
.RE
.PP
\fIcommit\-encoding\fR (string)
.RS 4
The encoding used for commits. The default is UTF\-8. Not this option is shadowed by the "i18n.commitencoding" option in
\&.git/config.
.RE
.SH "BIND COMMAND"
Using bind commands keys can be mapped to an action when pressed in a given key map. The syntax is:
.sp
.sp
.RS 4
.nf
\fBbind\fR \fIkeymap\fR \fIkey\fR \fIaction\fR
.fi
.RE
.sp
Examples:
.sp
.sp
.RS 4
.nf
# A few keybindings
bind main w scroll\-line\-up
bind main s scroll\-line\-down
bind main space enter
bind diff a previous
bind diff d next
bind diff b move\-first\-line
# 'unbind' the default quit key binding
bind main Q none
# An external command to update from upstream
bind generic F !git fetch
# Cherry\-pick current commit unto current branch
bind generic C !git cherry\-pick %(commit)
.fi
.RE
.sp
Keys are mapped by first searching the keybindings for the current view, then the keybindings for the \fBgeneric\fR keymap, and last the default keybindings. Thus, the view keybindings shadow the generic keybindings which Shadow the built\-in keybindings.
.sp
.PP
Keymaps
.RS 4
Valid keymaps are:
\fBmain\fR,
\fBdiff\fR,
\fBlog\fR,
\fBhelp\fR,
\fBpager\fR,
\fBstatus\fR,
\fBstage\fR, and
\fBgeneric\fR. Use
\fBgeneric\fR
to set key mapping in all keymaps.
.RE
.PP
Key values
.RS 4
Key values should never be quoted. Use either the ASCII value or one of the following symbolic key names. Symbolic key names are case insensitive, Use
\fBHash\fR
to bind to the
#
key, since the hash mark is used as a comment character.
.sp
\fBEnter\fR,
\fBSpace\fR,
\fBBackspace\fR,
\fBTab\fR,
\fBEscape\fR,
\fBLeft\fR,
\fBRight\fR,
\fBUp\fR,
\fBDown\fR,
\fBInsert\fR,
\fBDelete\fR,
\fBHash\fR,
\fBHome\fR,
\fBEnd\fR,
\fBPageUp\fR,
\fBPageDown\fR,
\fBF1\fR,
\fBF2\fR,
\fBF3\fR,
\fBF4\fR,
\fBF5\fR,
\fBF6\fR,
\fBF7\fR,
\fBF8\fR,
\fBF9\fR,
\fBF10\fR,
\fBF11\fR,
\fBF12\fR.
.RE
.PP
Action names
.RS 4
Valid action names are described below. Note, all names are case\-insensitive, and you may use
\fI\-\fR,
\fI_\fR, and
\fI.\fR
interchangeably, e.g. "view\-main", "View.Main", and "VIEW_MAIN" are the same.
.RE
.SS "Actions"
Apart from the action names listed below, all actions starting with a \fI!\fR will be available as an external command. External commands can contain variable names that will be substituted before the command is run. Valid variable names are "%(head)", "%(commit)", and "%(blob)".
.sp
As an example, the following external command will save the current commit as a patch file: "!git format\-patch %(commit)^..%(commit)".
.sp
View switching:
.sp
.sp
.RS 4
.nf
view\-main               Show main view
view\-diff               Show diff view
view\-log                Show log view
view\-tree               Show tree view
view\-blob               Show blob view
view\-status             Show status view
view\-stage              Show stage view
view\-pager              Show pager view
view\-help               Show help page
.fi
.RE
.sp
View manipulation:
.sp
.sp
.RS 4
.nf
enter                   Enter current line and scroll
next                    Move to next
previous                Move to previous
view\-next               Move focus to next view
refresh                 Reload and refresh view
view\-close              Close the current view
quit                    Close all views and quit
.fi
.RE
.sp
Cursor navigation:
.sp
.sp
.RS 4
.nf
move\-up                 Move cursor one line up
move\-down               Move cursor one line down
move\-page\-down          Move cursor one page down
move\-page\-up            Move cursor one page up
move\-first\-line         Move cursor to first line
move\-last\-line          Move cursor to last line
.fi
.RE
.sp
Scrolling:
.sp
.sp
.RS 4
.nf
scroll\-line\-up          Scroll one line up
scroll\-line\-down        Scroll one line down
scroll\-page\-eup         Scroll one page up
scroll\-page\-down        Scroll one page down
.fi
.RE
.sp
Searching:
.sp
.sp
.RS 4
.nf
search                  Search the view
search\-back             Search backwards in the view
find\-next               Find next search match
find\-prev               Find previous search match
.fi
.RE
.sp
Misc:
.sp
.sp
.RS 4
.nf
none                    Do nothing
prompt                  Bring up the prompt
screen\-redraw           Redraw the screen
screen\-resize           Resize the screen
show\-version            Show version information
stop\-loading            Stop all loading views
toggle\-lineno           Toggle line numbers
toggle\-rev\-graph        Toggle revision graph visualization
status\-update           Update file status
status\-merge            Resolve unmerged file
tree\-parent             Switch to parent directory in tree view
edit                    Open in editor
.fi
.RE
.sp
.SH "COLOR COMMAND"
Color commands control highlighting and the user interface styles. If your terminal supports color, these commands can be used to assign foreground and background combinations to certain areas. Optionally, an attribute can be given as the last parameter. The syntax is:
.sp
.sp
.RS 4
.nf
\fBcolor\fR \fIarea\fR \fIfgcolor\fR \fIbgcolor\fR \fI[attributes]\fR
.fi
.RE
.sp
Examples:
.sp
.sp
.RS 4
.nf
# Overwrite the default terminal colors to white on black.
color default           white   black
# Diff colors
color diff\-header       yellow  default
color diff\-index        blue    default
color diff\-chunk        magenta default
# A strange looking cursor line
color cursor            red     default underline
# UI colors
color title\-blur        white   blue
color title\-focus       white   blue    bold
.fi
.RE
.sp
.PP
Area names
.RS 4
Valid area names are described below. Note, all names are case\-insensitive, and you may use
\fI\-\fR,
\fI_\fR, and
\fI.\fR
interchangeably, e.g. "Diff\-Header", "DIFF_HEADER", and "diff.header" are the same.
.RE
.PP
Color names
.RS 4
Valid colors include:
\fBwhite\fR,
\fBblack\fR,
\fBgreen\fR,
\fBmagenta\fR,
\fBblue\fR,
\fBcyan\fR,
\fByellow\fR,
\fBred\fR,
\fBdefault\fR. Use
\fBdefault\fR
to refer to the default terminal colors.
.RE
.PP
Attribute names
.RS 4
Valid attributes include:
\fBnormal\fR,
\fBblink\fR,
\fBbold\fR,
\fBdim\fR,
\fBreverse\fR,
\fBstandout\fR, and
\fBunderline\fR. Note, not all attributes may be supported by the terminal.
.RE
.SS "UI colors"
.PP
Default terminal colors
.RS 4
The colors and attributes to be used for the text that is not highlighted or that specify the use of the default terminal colors can be controlled by setting the
\fBdefault\fR
color option.
.sp
Use the
\fBdefault\fR
color to use the colors configured for the terminal. This is the default and recommended if you are using a terminal with a transparent background.
.RE
.PP
Status window colors
.RS 4
Appearance of the bottom window showing info messages.
.sp
\fBstatus\fR
.RE
.PP
Title window colors
.RS 4
Appearance of the title windows when they are attached to any backgrounded windows and the current window.
.sp
\fBtitle\-blur\fR,
\fBtitle\-focus\fR
.RE
.PP
Cursor line colors
.RS 4

\fBcursor\fR
.RE
.PP
Main view specific
.RS 4
Appearance of the various columns in the main view, including the
\fI~\fR
used for delimiting long author names and labels for tag and branch references.
.sp
\fBmain\-date\fR,
\fBmain\-author\fR,
\fBmain\-commit\fR,
\fBmain\-delim\fR,
\fBmain\-tag\fR,
\fBmain\-ref\fR,
\fBmain\-remote\fR,
\fBmain\-revgraph\fR
.RE
.SS "Highlighting"
.PP
Diff markup
.RS 4
Options concerning diff start, chunks and lines added and deleted.
.sp
\fBdiff\-header\fR,
\fBdiff\-chunk\fR,
\fBdiff\-add\fR,
\fBdiff\-del\fR
.RE
.PP
Enhanced git diff markup
.RS 4
Extra diff information emitted by the git diff machinery, such as mode changes, rename detection, and similarity.
.sp
\fBdiff\-oldmode\fR,
\fBdiff\-newmode\fR,
\fBdiff\-copy\-from\fR,
\fBdiff\-copy\-to\fR,
\fBdiff\-rename\-from\fR,
\fBdiff\-rename\-to\fR,
\fBdiff\-similarity\fR,
\fBdiff\-dissimilarity\fR
\fBdiff\-tree\fR,
\fBdiff\-index\fR
.RE
.PP
Pretty print commit headers
.RS 4
Commit diffs and the revision logs are usually formatted using pretty printed headers , unless
\-\-pretty=raw
was given. This includes lines, such as merge info, commit ID, and author and committer date.
.sp
\fBpp\-author\fR,
\fBpp\-commit\fR,
\fBpp\-merge\fR,
\fBpp\-date\fR,
\fBpp\-adate\fR,
\fBpp\-cdate\fR,
\fBpp\-refs\fR
.RE
.PP
Raw commit header
.RS 4
Usually shown when
\-\-pretty=raw
is given, however
\fIcommit\fR
is pretty much omnipresent.
.sp
\fBcommit\fR,
\fBparent\fR,
\fBtree\fR,
\fBauthor\fR,
\fBcommitter\fR
.RE
.PP
Commit message
.RS 4
For now only
Signed\-off\-by
and
Acked\-by
lines are colorized.
.sp
\fBsignoff\fR,
\fBacked\fR
.RE
.PP
Tree markup
.RS 4
Colors for information of the tree view.
.sp
\fBtree\-dir\fR,
\fBtree\-file\fR
.RE
.PP
Status markup
.RS 4
Colors used in the status view.
.sp
\fBstat\-section\fR,
\fBstat\-none\fR,
\fBstat\-staged\fR,
\fBstat\-unstaged\fR,
\fBstat\-untracked\fR
.RE
.SH "COPYRIGHT"
Copyright (c) 2006\-2007 Jonas Fonseca <fonseca@diku.dk>
.sp
Licensed under the terms of the GNU General Public License.
.sp
.SH "SEE ALSO"
\fBtig\fR(1) and the \fItig manual\fR\&[1].
.sp
.SH "REFERENCES"
.IP " 1." 4
tig manual
.RS 4
\%http://jonas.nitro.dk/tig/manual.html
.RE
